@using He.PipelineAssessment.UI.Features.Admin.AssessmentToolManagement.Queries.GetAssessmentTools;
@model AssessmentToolListData;

@{
    ViewData["Title"] = "Assessment Tools";
    Layout = "_Layout";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @Html.ActionLink("Back","Index","Assessment", null,new{ @class="govuk-back-link"})
    </div>
    <div class="govuk-grid-column-one-third pull-right">
        <label for="createAssessmentTool" hidden="hidden">createAssessmentTool: </label>
        @Html.ActionLink("Create Assessment Tool", "LoadAssessmentTool","Admin", null, new {@class = "govuk-link"})
    </div>
    <div class="govuk-grid-column-one-third pull-right">
        <label for="createAssessmentToolCategory" hidden="hidden">createAssessmentToolCategory: </label>
        @Html.ActionLink("Create Assessment Tool Category", "LoadAssessmentToolCategory","Admin", null, new {@class = "govuk-link"})
    </div>
</div>
<div class="text-center">
    <table class="govuk-table">
        <caption class="govuk-table__caption govuk-table__caption--m">Assessment Tools</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">Name</th>
                <th scope="col" class="govuk-table__header">Order</th>
                <th scope="col" class="govuk-table__header">Update</th>
                <th scope="col" class="govuk-table__header">Remove</th>
                <th scope="col" class="govuk-table__header">Assessment Tool Categories</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @{
                int iterrator = 0;
                @foreach (var assessmentTool in Model.AssessmentTools)
                {
                    iterrator++;
                    var nameErrorClass = "";
                    var orderErrorClass = "";
                    var errorFormClass = "";
                    if (assessmentTool.ValidationResult != null)
                    {
                        errorFormClass = !assessmentTool.ValidationResult.IsValid ? "govuk-form-group--error" : "";
                        var nameInvalid = assessmentTool.ValidationResult.Errors.Any(x => x.PropertyName == "Name");
                        var orderInvalid = assessmentTool.ValidationResult.Errors.Any(x => x.PropertyName == "Order");
                        nameErrorClass = nameInvalid ? "govuk-input--error" : "";
                        orderErrorClass = orderInvalid ? "govuk-input--error" : "";
                    }

                    @if (assessmentTool.ValidationResult != null && !assessmentTool.ValidationResult.IsValid)
                    {
                        @await Html.PartialAsync("~/Features/Workflow/Views/Shared/_ValidationSummary.cshtml", assessmentTool.ValidationResult)
                    }
                    <tr class="govuk-table__row @errorFormClass">
                        @using (Html.BeginForm("UpdateAssessmentTool", "Admin", FormMethod.Post))
                        {
                            <td class="govuk-table__cell">
                                <div class="govuk-form-group">
                                    @{
                                        var labelId = "Name" + iterrator;
                                        <label hidden id=@labelId>"Row: @iterrator column: name"</label>
                                        <input type="text" value="@assessmentTool.Name" name="UpdateAssessmentToolCommand.Name" class="govuk-input @nameErrorClass" aria-labelledBy="@labelId" />
                                        @if (assessmentTool.ValidationResult != null)
                                        {
                                            @foreach (var error in assessmentTool.ValidationResult.Errors.Where(x => x.PropertyName == "Name"))
                                            {
                                                @Html.ValidationMessageFor(model => assessmentTool.Order, error.ErrorMessage, new { @class = "govuk-error-message" })
                                            }
                                        }
                                    }
                                </div>
                            </td>
                            <td class="govuk-table__cell">
                                <div class="govuk-form-group">
                                @{
                                        var orderLabelId = "Order" + iterrator;
                                        <label hidden id=@orderLabelId>"Row: @iterrator column: order"</label>
                                    <input type="text" value="@assessmentTool.Order" name="UpdateAssessmentToolCommand.Order" class="govuk-input @orderErrorClass" aria-labelledBy="@orderLabelId"/>
                                    @if (assessmentTool.ValidationResult != null)
                                    {
                                        @foreach (var error in assessmentTool.ValidationResult.Errors.Where(x => x.PropertyName == "Order"))
                                        {
                                            @Html.ValidationMessageFor(model => assessmentTool.Order, error.ErrorMessage, new { @class = "govuk-error-message" })
                                        }
                                    }
                                    }
                                </div>
                            </td>
                            <td class="govuk-table__cell">
                                @{
                                    var hiddenId = "hidden" + iterrator;
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("UpdateAssessmentToolCommand.Id", assessmentTool.Id,new { @id=@hiddenId})

                                    var updateId = "Update" + iterrator;
                                    <input class="govuk-button govuk-!-margin-0" data-module="govuk-button" id="@updateId" type="submit" value="Update" />
                                
                                }
                            </td>
                        }
                        <td class="govuk-table__cell">
                            @Html.ActionLink("Remove", "GetAssessmentToolById", "Admin", new { assessmentToolId = assessmentTool.Id })
                        </td>
                        <td class="govuk-table__cell">
                            @Html.ActionLink("Manage Assessment Tool Categories", "AssessmentToolCategory", "Admin", new {  assessmentToolName = assessmentTool.Name })
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>