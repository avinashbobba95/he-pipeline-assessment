@using He.PipelineAssessment.UI
@using Elsa.CustomWorkflow.Sdk
@using Microsoft.CodeAnalysis.CSharp.Syntax
@model He.PipelineAssessment.UI.Features.Workflow.QuestionScreenSaveAndContinue.QuestionScreenSaveAndContinueCommand

@{
    ViewData["Title"] = "Pipeline Assessment";
    Layout = "_Layout";
}
<div class="text-center">
    @if (Model.Data.ActivityId != Model.Data.PreviousActivityId)
    {
        @Html.ActionLink("Back","LoadWorkflowActivity","Workflow", new {WorkflowInstanceId = Model.Data.WorkflowInstanceId, ActivityId = Model.Data.PreviousActivityId, ActivityType = Model.Data.PreviousActivityType},new{ @class="govuk-back-link"})
    }

    @using (Html.BeginForm("QuestionScreenSaveAndContinue", "Workflow", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => Model.Data.WorkflowInstanceId)
        @Html.HiddenFor(m => Model.Data.ActivityId)
        @Html.HiddenFor(m => Model.Data.PreviousActivityId)
        @Html.HiddenFor(m => Model.Data.PreviousActivityType)
        @Html.HiddenFor(m => Model.AssessmentId)

        @Html.HiddenFor(m => Model.Data.ActivityType)
        <br />
        @*  if (Model.Data.ActivityType == ActivityTypeConstants.QuestionScreen)
    {
    @await Html.PartialAsync("_QuestionScreen",Model)
    }*@


        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds-from-desktop">
                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    @foreach (var question in Model.Data.Questions!)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                            @if (question.QuestionType != QuestionTypeConstants.Information)
                            {
                                @question.Question
                            }
                            else
                            {
                                @string.Join("/r/n", question.Information.InformationTextList.Where(x=>x.IsGuidance==false && x.IsHyperlink ==false && x.Text!=null).Select(x=>x.Text).ToList());
                            }

                            </dt>
                            <dd class="govuk-summary-list__value">
                                <div class="govuk-input__wrapper">

                                    @if (question.QuestionType != QuestionTypeConstants.Information)
                                    {
                                        <div class="govuk-input__prefix" aria-hidden="true">£</div>
                                        <input type="text" class="govuk-input govuk-input--width-5" />
                                    }

                                </div>
                            </dd>

                        </div>

                    }
                </dl>
            </div>
        </div>
    }
</div>


